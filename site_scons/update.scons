from SCons.Errors import SConsEnvironmentError

Import("core_env")

update_env = core_env.Clone(
    toolpath=[core_env["FBT_SCRIPT_DIR"].Dir("fbt_tools")],
    tools=["python3"],
)
print("Updating SDK...")
sdk_meta = update_env["UFBT_SDK_META"]

update_args = [
    "--hw-target",
    sdk_meta["hw_target"],
    "--ufbt-dir",
    update_env["UFBT_WORK_DIR"],
]

if branch_name := (GetOption("sdk_branch") or sdk_meta.get("branch", None)):
    update_args.extend(["--branch", branch_name])
elif channel_name := (GetOption("sdk_channel") or sdk_meta.get("channel", None)):
    update_args.extend(["--channel", channel_name])
else:
    raise SConsEnvironmentError("No branch or channel specified for SDK update")

update_env.Replace(UPDATE_ARGS=update_args)
result = update_env.Execute(
    update_env.subst("$PYTHON3 $UFBT_BOOTSTRAP_SCRIPT $UPDATE_ARGS"),
)
Exit(result)
